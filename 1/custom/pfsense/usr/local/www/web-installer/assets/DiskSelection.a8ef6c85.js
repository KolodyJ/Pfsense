import{S as r,x as i,b as m,n as d}from"./index.4ef18076.js";import{s as c}from"./SystemInfoApi.c9fb53ba.js";import{V as u}from"./index.f9fd3e90.js";import{_ as a}from"./VBtn.01587b6d.js";const f={setFileSystem:{url:()=>"installer/disk-fs-type",method:r.methods.POST,cleanDataBeforeSave:!1},setPartitionScheme:{url:()=>"installer/disk-part-scheme",method:r.methods.POST,cleanDataBeforeSave:!1},setTargetDisk:{url:()=>"installer/disk-add",method:r.methods.POST,cleanDataBeforeSave:!1},setFormatDisk:{url:()=>"installer/disk-commit",method:r.methods.POST,cleanDataBeforeSave:!1},diskPreCheck:{url:()=>"installer/disk-commit-pre-check",method:r.methods.GET,cleanDataBeforeSave:!1}};var h=()=>new r(f);const p=[{text:"Stripe - No Redundancy",value:"stripe"},{text:"Mirror - n-Way Mirroring",value:"mirror"},{text:"RAID 1+0 - n x 2-Way Mirrors",value:"raid10"},{text:"RAID-Z1 - Single Redundant RAID",value:"raidz1"},{text:"RAID-Z2 - Double Redundant RAID",value:"raidz2"},{text:"RAID-Z3 - Triple Redundant RAID",value:"raidz3"}],k=[{text:"ZFS",value:"ZFS"},{text:"UFS",value:"UFS"}],S=[{text:"GPT",value:"GPT"},{text:"MBR",value:"MBR"}],y={fileSystem:"ZFS",poolType:"stripe",partitionScheme:"GPT",ufsDisk:"",disks:[]},g={data(){return{fileSystemForm:[{title:"Select File System",dense:!0,elements:[{element:i.componentsByTypes.radioGroup,modelKey:"fileSystem",optionsKey:"fileSystem",items:"fileSystem",column:!1}]}],zfsForm:[{elements:[{element:i.componentsByTypes.multiselect,modelKey:"disks",label:"Disk(s)",optionsKey:"disks",itemText:"disk",itemValue:"disk",showBtnAll:!1,md:4,rules:[m.isNotEmpty]},{element:i.componentsByTypes.defaultSelect,modelKey:"poolType",label:"Pool Type",optionsKey:"poolTypes",itemValue:"value",itemText:"text",md:4},{element:i.componentsByTypes.defaultSelect,modelKey:"partitionScheme",label:"Partition Scheme",optionsKey:"partitionScheme",md:4}]}],ufsForm:[{elements:[{element:i.componentsByTypes.defaultSelect,modelKey:"ufsDisk",label:"Disk",optionsKey:"disks",itemText:"disk",itemValue:"disk",md:6},{element:i.componentsByTypes.defaultSelect,modelKey:"partitionScheme",label:"Partition Scheme",optionsKey:"partitionScheme",md:6}]}]}}};var v=function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",[t("card",{staticClass:"ma-5 cards",attrs:{title:"File System Configuration"}},[t(u,[t("form-helper",{ref:"fileSystemForm",attrs:{item:e.diskSettings,template:e.fileSystemForm,additionalItems:e.additionalItems}}),e.diskSettings.fileSystem==="ZFS"?t("form-helper",{ref:"zfsForm",attrs:{item:e.diskSettings,template:e.zfsForm,additionalItems:e.additionalItems}}):e._e(),e.diskSettings.fileSystem==="UFS"?t("form-helper",{ref:"ufsForm",attrs:{item:e.diskSettings,template:e.ufsForm,additionalItems:e.additionalItems}}):e._e()],1)],1),t("base-dialog",{ref:"dialog",attrs:{title:"Continue?",confirmCallback:e.selectDisk},model:{value:e.dialogContinue,callback:function(o){e.dialogContinue=o},expression:"dialogContinue"}},[e._v(" You are performing a destructive action, and may take some time. Are you sure that you wish to continue? ")]),t("base-dialog",{ref:"errorDialog",attrs:{title:"Error",confirmCallback:e.closeError},model:{value:e.dialogError,callback:function(o){e.dialogError=o},expression:"dialogError"}},[e._v(" "+e._s(e.errorType)+" while "+e._s(e.errorAction)+". There may be an issue with your settings or your disk. ")]),t("div",{staticClass:"d-flex justify-center mb-3"},[t(a,{staticClass:"mr-5",attrs:{color:"error"},on:{click:e.goBack}},[e._v("Back")]),t(a,{attrs:{color:"success"},on:{click:e.confirm}},[e._v("Continue")])],1)],1)},T=[];const _={mixins:[g],data(){return{diskSettings:y,systemInfoApi:c(),diskApi:h(),dialogContinue:!1,dialogError:!1,errorType:"",errorAction:""}},methods:{confirm(){this.diskSettings.fileSystem==="ZFS"&&!this.$refs.zfsForm.validate()||this.diskSettings.fileSystem==="UFS"&&!this.$refs.ufsForm.validate()||(this.$refs.dialog.open(),this.dialogContinue=!0)},goBack(){this.$router.push("/network-setup")},selectDisk(){Array.isArray(this.diskSettings.disks)&&(this.diskSettings.disks=this.diskSettings.disks.join()),this.diskApi.setFileSystem({},new URLSearchParams({fstype:this.diskSettings.fileSystem})).then(e=>{if(this.checkResult("setting file system",e))return this.diskApi.setTargetDisk({},new URLSearchParams({disk:this.diskSettings.fileSystem==="ZFS"?this.diskSettings.disks:this.diskSettings.ufsDisk})).then(s=>{if(this.checkResult("adding disk",s))return this.diskApi.setPartitionScheme({},new URLSearchParams({scheme:this.diskSettings.partitionScheme})).then(t=>{if(this.checkResult("setting partition scheme",t))return this.diskApi.diskPreCheck().then(o=>{if(this.checkResult("final precheck",o))return this.diskApi.setFormatDisk({},new URLSearchParams({accept:1})).then(l=>{this.checkResult("formatting disk",l)&&(this.$refs.dialog.close(),this.$router.push("/repo-selection"))})})})})})},refresh(){this.systemInfoApi.getSystemInfo().then(e=>{this.$store.commit("updateSystemInfo",e.data)})},checkResult(e,s){return s.data.status==="ok"?!0:(this.errorAction=e,this.errorType="Error: "+s.data.message,this.$refs.errorDialog.open(),!1)},closeError(){this.$refs.errorDialog.close()}},computed:{additionalItems(){return{poolTypes:p,fileSystem:k,partitionScheme:S,disks:this.$store.state.SystemInformation.disks.map(e=>({disk:e.name}))}}},mounted(){this.refresh()}},n={};var D=d(_,v,T,!1,F,null,null,null);function F(e){for(let s in n)this[s]=n[s]}var P=function(){return D.exports}();export{P as default};
